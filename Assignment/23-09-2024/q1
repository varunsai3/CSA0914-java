class Animal {
String name;

Animal(String name) {
    this.name = name;
}

void makeSound() {
    System.out.println("Animal sound");
}
}
class Dog extends Animal {

Dog(String name) {
    super(name);
}

@Override
void makeSound() {
    System.out.println(name + " says: Woof!");
}
}
public class InheritanceExample {
public static void main(String[] args) {
Animal myDog = new Dog("Buddy");
myDog.makeSound();
}
}

Charumathi45 commented 1 hour ago
@Charumathi45
Charumathi45
1 hour ago
Owner
Author
class Person {
String name;
int age;
Person(String name, int age) {
this.name = name;
this.age = age;
}
}
class Student extends Person {
String grade;
Student(String name, int age, String grade) {
super(name, age);
this.grade = grade;
}
void displayInfo() {
System.out.println("Name: " + name);
System.out.println("Age: " + age);
System.out.println("Grade: " + grade);
}
}
public class ConstructorInheritanceExample {
public static void main(String[] args) {
Student student = new Student("Alice", 20, "A");
student.displayInfo();
}
}
